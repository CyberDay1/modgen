import fs from 'fs';
import path from 'path';

function ensureDir(dir: string): void {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }
}

function writePackMeta(root: string): void {
  const packMetaPath = path.join(root, 'pack.mcmeta');
  const packMeta = {
    pack: {
      pack_format: 48,
      description: 'Generated by ModGen',
    },
  };

  fs.writeFileSync(packMetaPath, `${JSON.stringify(packMeta, null, 2)}\n`);
}

export function generateDatapack(root: string): void {
  const datapackRoot = path.resolve(root);
  ensureDir(datapackRoot);

  const dataDir = path.join(datapackRoot, 'data');
  const minecraftDir = path.join(dataDir, 'minecraft');
  const tagsDir = path.join(minecraftDir, 'tags');
  const functionsTagDir = path.join(tagsDir, 'functions');
  const namespaceDir = path.join(dataDir, 'modgen');

  [
    dataDir,
    minecraftDir,
    tagsDir,
    functionsTagDir,
    namespaceDir,
    path.join(namespaceDir, 'functions'),
    path.join(namespaceDir, 'advancements'),
    path.join(namespaceDir, 'loot_tables'),
    path.join(namespaceDir, 'recipes'),
    path.join(namespaceDir, 'predicates'),
    path.join(namespaceDir, 'structures'),
    path.join(namespaceDir, 'worldgen'),
  ].forEach(ensureDir);

  writePackMeta(datapackRoot);
}
